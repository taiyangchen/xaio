// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: com/sm/common/xaio/proto/Rpc.proto

package com.sm.common.xaio.proto;

public final class RpcData {
  private RpcData() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {}

  /**
   * Protobuf enum {@code rpc_client.RpcErrno}
   */
  public enum RpcErrno implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>kSuccess = 0;</code>
     */
    kSuccess(0, 0),
    /**
     * <code>kServiceErrorStatus = 100001;</code>
     */
    kServiceErrorStatus(2, 100001),
    /**
     * <code>kServiceBuzy = 100020;</code>
     */
    kServiceBuzy(3, 100020),
    /**
     * <code>kNoAuthorized = 100030;</code>
     *
     * <pre>
     * 尚未认证
     * </pre>
     */
    kNoAuthorized(4, 100030),
    /**
     * <code>kAuthorizedFailed = 100040;</code>
     *
     * <pre>
     * 认证失败
     * </pre>
     */
    kAuthorizedFailed(5, 100040),
    /**
     * <code>kInvalidIdent = 100050;</code>
     */
    kInvalidIdent(6, 100050),
    /**
     * <code>kInvalidProtoPackage = 100051;</code>
     *
     * <pre>
     * 无效的请求
     * RpcProto Message 解析失败
     * </pre>
     */
    kInvalidProtoPackage(7, 100051),
    /**
     * <code>kInvalidRequestPackage = 100052;</code>
     *
     * <pre>
     * 无效的请求
     * Request Message 解析失败
     * </pre>
     */
    kInvalidRequestPackage(8, 100052),
    /**
     * <code>kMethodNotImplement = 100053;</code>
     *
     * <pre>
     * 方法尚未实现
     * </pre>
     */
    kMethodNotImplement(9, 100053),
    /**
     * <code>kNoSuchService = 100060;</code>
     *
     * <pre>
     * 没有请求的服务
     * </pre>
     */
    kNoSuchService(10, 100060),
    /**
     * <code>kNoSuchMethod = 100070;</code>
     *
     * <pre>
     * 没有请求的方法
     * </pre>
     */
    kNoSuchMethod(11, 100070),
    /**
     * <code>kCancelled = 100100;</code>
     */
    kCancelled(12, 100100),
    /**
     * <code>kCancellingFailed = 100105;</code>
     *
     * <pre>
     * 请求已经完成，取消失败
     * </pre>
     */
    kCancellingFailed(13, 100105),
    /**
     * <code>kInternalError = 100980;</code>
     */
    kInternalError(14, 100980),
    /**
     * <code>kClientErrorStatus = 200001;</code>
     *
     * <pre>
     * </pre>
     */
    kClientErrorStatus(15, 200001),
    /**
     * <code>kIdle = 200010;</code>
     */
    kIdle(16, 200010),
    /**
     * <code>kChannelError = 200030;</code>
     */
    kChannelError(17, 200030),
    /**
     * <code>kRequestHasCompleted = 200050;</code>
     *
     * <pre>
     * 请求已经完整了，此错误发生在 CancelRequest 时
     * </pre>
     */
    kRequestHasCompleted(18, 200050),
    /**
     * <code>kTimedout = 200080;</code>
     */
    kTimedout(19, 200080),
    /**
     * <code>kServerStopped = 200100;</code>
     */
    kServerStopped(20, 200100),
    /**
     * <code>kUnknownError = 300001;</code>
     */
    kUnknownError(21, 300001),;

    /**
     * <code>kOk = 0;</code>
     */
    public static final RpcErrno kOk = kSuccess;
    /**
     * <code>kSuccess = 0;</code>
     */
    public static final int kSuccess_VALUE = 0;
    /**
     * <code>kOk = 0;</code>
     */
    public static final int kOk_VALUE = 0;
    /**
     * <code>kServiceErrorStatus = 100001;</code>
     */
    public static final int kServiceErrorStatus_VALUE = 100001;
    /**
     * <code>kServiceBuzy = 100020;</code>
     */
    public static final int kServiceBuzy_VALUE = 100020;
    /**
     * <code>kNoAuthorized = 100030;</code>
     *
     * <pre>
     * 尚未认证
     * </pre>
     */
    public static final int kNoAuthorized_VALUE = 100030;
    /**
     * <code>kAuthorizedFailed = 100040;</code>
     *
     * <pre>
     * 认证失败
     * </pre>
     */
    public static final int kAuthorizedFailed_VALUE = 100040;
    /**
     * <code>kInvalidIdent = 100050;</code>
     */
    public static final int kInvalidIdent_VALUE = 100050;
    /**
     * <code>kInvalidProtoPackage = 100051;</code>
     *
     * <pre>
     * 无效的请求
     * RpcProto Message 解析失败
     * </pre>
     */
    public static final int kInvalidProtoPackage_VALUE = 100051;
    /**
     * <code>kInvalidRequestPackage = 100052;</code>
     *
     * <pre>
     * 无效的请求
     * Request Message 解析失败
     * </pre>
     */
    public static final int kInvalidRequestPackage_VALUE = 100052;
    /**
     * <code>kMethodNotImplement = 100053;</code>
     *
     * <pre>
     * 方法尚未实现
     * </pre>
     */
    public static final int kMethodNotImplement_VALUE = 100053;
    /**
     * <code>kNoSuchService = 100060;</code>
     *
     * <pre>
     * 没有请求的服务
     * </pre>
     */
    public static final int kNoSuchService_VALUE = 100060;
    /**
     * <code>kNoSuchMethod = 100070;</code>
     *
     * <pre>
     * 没有请求的方法
     * </pre>
     */
    public static final int kNoSuchMethod_VALUE = 100070;
    /**
     * <code>kCancelled = 100100;</code>
     */
    public static final int kCancelled_VALUE = 100100;
    /**
     * <code>kCancellingFailed = 100105;</code>
     *
     * <pre>
     * 请求已经完成，取消失败
     * </pre>
     */
    public static final int kCancellingFailed_VALUE = 100105;
    /**
     * <code>kInternalError = 100980;</code>
     */
    public static final int kInternalError_VALUE = 100980;
    /**
     * <code>kClientErrorStatus = 200001;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int kClientErrorStatus_VALUE = 200001;
    /**
     * <code>kIdle = 200010;</code>
     */
    public static final int kIdle_VALUE = 200010;
    /**
     * <code>kChannelError = 200030;</code>
     */
    public static final int kChannelError_VALUE = 200030;
    /**
     * <code>kRequestHasCompleted = 200050;</code>
     *
     * <pre>
     * 请求已经完整了，此错误发生在 CancelRequest 时
     * </pre>
     */
    public static final int kRequestHasCompleted_VALUE = 200050;
    /**
     * <code>kTimedout = 200080;</code>
     */
    public static final int kTimedout_VALUE = 200080;
    /**
     * <code>kServerStopped = 200100;</code>
     */
    public static final int kServerStopped_VALUE = 200100;
    /**
     * <code>kUnknownError = 300001;</code>
     */
    public static final int kUnknownError_VALUE = 300001;


    public final int getNumber() {
      return value;
    }

    public static RpcErrno valueOf(int value) {
      switch (value) {
        case 0:
          return kSuccess;
        case 100001:
          return kServiceErrorStatus;
        case 100020:
          return kServiceBuzy;
        case 100030:
          return kNoAuthorized;
        case 100040:
          return kAuthorizedFailed;
        case 100050:
          return kInvalidIdent;
        case 100051:
          return kInvalidProtoPackage;
        case 100052:
          return kInvalidRequestPackage;
        case 100053:
          return kMethodNotImplement;
        case 100060:
          return kNoSuchService;
        case 100070:
          return kNoSuchMethod;
        case 100100:
          return kCancelled;
        case 100105:
          return kCancellingFailed;
        case 100980:
          return kInternalError;
        case 200001:
          return kClientErrorStatus;
        case 200010:
          return kIdle;
        case 200030:
          return kChannelError;
        case 200050:
          return kRequestHasCompleted;
        case 200080:
          return kTimedout;
        case 200100:
          return kServerStopped;
        case 300001:
          return kUnknownError;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RpcErrno> internalGetValueMap() {
      return internalValueMap;
    }

    private static com.google.protobuf.Internal.EnumLiteMap<RpcErrno> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RpcErrno>() {
          public RpcErrno findValueByNumber(int number) {
            return RpcErrno.valueOf(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.sm.common.xaio.proto.RpcData.getDescriptor().getEnumTypes().get(0);
    }

    private static final RpcErrno[] VALUES = {kSuccess, kOk, kServiceErrorStatus, kServiceBuzy, kNoAuthorized,
        kAuthorizedFailed, kInvalidIdent, kInvalidProtoPackage, kInvalidRequestPackage, kMethodNotImplement,
        kNoSuchService, kNoSuchMethod, kCancelled, kCancellingFailed, kInternalError, kClientErrorStatus, kIdle,
        kChannelError, kRequestHasCompleted, kTimedout, kServerStopped, kUnknownError,};

    public static RpcErrno valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private RpcErrno(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:rpc_client.RpcErrno)
  }

  /**
   * Protobuf enum {@code rpc_client.CommType}
   */
  public enum CommType implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>kRequest = 1;</code>
     */
    kRequest(0, 1),
    /**
     * <code>kResponse = 8;</code>
     */
    kResponse(1, 8),
    /**
     * <code>kControlType = 100;</code>
     *
     * <pre>
     * kControlType 是一个分割符，所有大于的它的都是控制类请求
     * </pre>
     */
    kControlType(2, 100),
    /**
     * <code>kAuthorize = 120;</code>
     */
    kAuthorize(3, 120),
    /**
     * <code>kCancelRequest = 130;</code>
     */
    kCancelRequest(4, 130),
    /**
     * <code>kHeartBeat = 150;</code>
     */
    kHeartBeat(5, 150),;

    /**
     * <code>kRequest = 1;</code>
     */
    public static final int kRequest_VALUE = 1;
    /**
     * <code>kResponse = 8;</code>
     */
    public static final int kResponse_VALUE = 8;
    /**
     * <code>kControlType = 100;</code>
     *
     * <pre>
     * kControlType 是一个分割符，所有大于的它的都是控制类请求
     * </pre>
     */
    public static final int kControlType_VALUE = 100;
    /**
     * <code>kAuthorize = 120;</code>
     */
    public static final int kAuthorize_VALUE = 120;
    /**
     * <code>kCancelRequest = 130;</code>
     */
    public static final int kCancelRequest_VALUE = 130;
    /**
     * <code>kHeartBeat = 150;</code>
     */
    public static final int kHeartBeat_VALUE = 150;


    public final int getNumber() {
      return value;
    }

    public static CommType valueOf(int value) {
      switch (value) {
        case 1:
          return kRequest;
        case 8:
          return kResponse;
        case 100:
          return kControlType;
        case 120:
          return kAuthorize;
        case 130:
          return kCancelRequest;
        case 150:
          return kHeartBeat;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CommType> internalGetValueMap() {
      return internalValueMap;
    }

    private static com.google.protobuf.Internal.EnumLiteMap<CommType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CommType>() {
          public CommType findValueByNumber(int number) {
            return CommType.valueOf(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.sm.common.xaio.proto.RpcData.getDescriptor().getEnumTypes().get(1);
    }

    private static final CommType[] VALUES = values();

    public static CommType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CommType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:rpc_client.CommType)
  }

  public interface RpcProtoOrBuilder extends com.google.protobuf.MessageOrBuilder {

    // required int32 type = 10;
    /**
     * <code>required int32 type = 10;</code>
     */
    boolean hasType();

    /**
     * <code>required int32 type = 10;</code>
     */
    int getType();

    // optional int32 requestid = 50;
    /**
     * <code>optional int32 requestid = 50;</code>
     *
     * <pre>
     * 再一次请求时， 服务器会为每一个客户端指定一个唯一的 ID
     * 用于标识客户端，第一次请求时，客户端需要将 client_id 设置为 -1
     * </pre>
     */
    boolean hasRequestid();

    /**
     * <code>optional int32 requestid = 50;</code>
     *
     * <pre>
     * 再一次请求时， 服务器会为每一个客户端指定一个唯一的 ID
     * 用于标识客户端，第一次请求时，客户端需要将 client_id 设置为 -1
     * </pre>
     */
    int getRequestid();

    // optional string service_name = 100;
    /**
     * <code>optional string service_name = 100;</code>
     */
    boolean hasServiceName();

    /**
     * <code>optional string service_name = 100;</code>
     */
    java.lang.String getServiceName();

    /**
     * <code>optional string service_name = 100;</code>
     */
    com.google.protobuf.ByteString getServiceNameBytes();

    // optional string method_name = 110;
    /**
     * <code>optional string method_name = 110;</code>
     */
    boolean hasMethodName();

    /**
     * <code>optional string method_name = 110;</code>
     */
    java.lang.String getMethodName();

    /**
     * <code>optional string method_name = 110;</code>
     */
    com.google.protobuf.ByteString getMethodNameBytes();

    // optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];
    /**
     * <code>optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];</code>
     */
    boolean hasRpcErrno();

    /**
     * <code>optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];</code>
     */
    com.sm.common.xaio.proto.RpcData.RpcErrno getRpcErrno();

    // optional string user_error_msg = 210;
    /**
     * <code>optional string user_error_msg = 210;</code>
     */
    boolean hasUserErrorMsg();

    /**
     * <code>optional string user_error_msg = 210;</code>
     */
    java.lang.String getUserErrorMsg();

    /**
     * <code>optional string user_error_msg = 210;</code>
     */
    com.google.protobuf.ByteString getUserErrorMsgBytes();

    // optional int32 cancelled_reqid = 300;
    /**
     * <code>optional int32 cancelled_reqid = 300;</code>
     *
     * <pre>
     * 格外的控制选项, 用于取消请求
     * </pre>
     */
    boolean hasCancelledReqid();

    /**
     * <code>optional int32 cancelled_reqid = 300;</code>
     *
     * <pre>
     * 格外的控制选项, 用于取消请求
     * </pre>
     */
    int getCancelledReqid();

    // optional int32 compress = 400;
    /**
     * <code>optional int32 compress = 400;</code>
     *
     * <pre>
     * 压缩方式
     * </pre>
     */
    boolean hasCompress();

    /**
     * <code>optional int32 compress = 400;</code>
     *
     * <pre>
     * 压缩方式
     * </pre>
     */
    int getCompress();

    // optional bytes body = 500;
    /**
     * <code>optional bytes body = 500;</code>
     */
    boolean hasBody();

    /**
     * <code>optional bytes body = 500;</code>
     */
    com.google.protobuf.ByteString getBody();
  }
  /**
   * Protobuf type {@code rpc_client.RpcProto}
   */
  public static final class RpcProto extends com.google.protobuf.GeneratedMessage implements RpcProtoOrBuilder {
    // Use RpcProto.newBuilder() to construct.
    private RpcProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }

    private RpcProto(boolean noInit) {
      this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    private static final RpcProto defaultInstance;

    public static RpcProto getDefaultInstance() {
      return defaultInstance;
    }

    public RpcProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private RpcProto(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 80: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 400: {
              bitField0_ |= 0x00000002;
              requestid_ = input.readInt32();
              break;
            }
            case 802: {
              bitField0_ |= 0x00000004;
              serviceName_ = input.readBytes();
              break;
            }
            case 882: {
              bitField0_ |= 0x00000008;
              methodName_ = input.readBytes();
              break;
            }
            case 1600: {
              int rawValue = input.readEnum();
              com.sm.common.xaio.proto.RpcData.RpcErrno value =
                  com.sm.common.xaio.proto.RpcData.RpcErrno.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(200, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                rpcErrno_ = value;
              }
              break;
            }
            case 1682: {
              bitField0_ |= 0x00000020;
              userErrorMsg_ = input.readBytes();
              break;
            }
            case 2400: {
              bitField0_ |= 0x00000040;
              cancelledReqid_ = input.readInt32();
              break;
            }
            case 3200: {
              bitField0_ |= 0x00000080;
              compress_ = input.readInt32();
              break;
            }
            case 4002: {
              bitField0_ |= 0x00000100;
              body_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.sm.common.xaio.proto.RpcData.internal_static_rpc_client_RpcProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.sm.common.xaio.proto.RpcData.internal_static_rpc_client_RpcProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(com.sm.common.xaio.proto.RpcData.RpcProto.class,
              com.sm.common.xaio.proto.RpcData.RpcProto.Builder.class);
    }

    public static com.google.protobuf.Parser<RpcProto> PARSER = new com.google.protobuf.AbstractParser<RpcProto>() {
      public RpcProto parsePartialFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RpcProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RpcProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 10;
    public static final int TYPE_FIELD_NUMBER = 10;
    private int type_;

    /**
     * <code>required int32 type = 10;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>required int32 type = 10;</code>
     */
    public int getType() {
      return type_;
    }

    // optional int32 requestid = 50;
    public static final int REQUESTID_FIELD_NUMBER = 50;
    private int requestid_;

    /**
     * <code>optional int32 requestid = 50;</code>
     *
     * <pre>
     * 再一次请求时， 服务器会为每一个客户端指定一个唯一的 ID
     * 用于标识客户端，第一次请求时，客户端需要将 client_id 设置为 -1
     * </pre>
     */
    public boolean hasRequestid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    /**
     * <code>optional int32 requestid = 50;</code>
     *
     * <pre>
     * 再一次请求时， 服务器会为每一个客户端指定一个唯一的 ID
     * 用于标识客户端，第一次请求时，客户端需要将 client_id 设置为 -1
     * </pre>
     */
    public int getRequestid() {
      return requestid_;
    }

    // optional string service_name = 100;
    public static final int SERVICE_NAME_FIELD_NUMBER = 100;
    private java.lang.Object serviceName_;

    /**
     * <code>optional string service_name = 100;</code>
     */
    public boolean hasServiceName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    /**
     * <code>optional string service_name = 100;</code>
     */
    public java.lang.String getServiceName() {
      java.lang.Object ref = serviceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serviceName_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string service_name = 100;</code>
     */
    public com.google.protobuf.ByteString getServiceNameBytes() {
      java.lang.Object ref = serviceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        serviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string method_name = 110;
    public static final int METHOD_NAME_FIELD_NUMBER = 110;
    private java.lang.Object methodName_;

    /**
     * <code>optional string method_name = 110;</code>
     */
    public boolean hasMethodName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    /**
     * <code>optional string method_name = 110;</code>
     */
    public java.lang.String getMethodName() {
      java.lang.Object ref = methodName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          methodName_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string method_name = 110;</code>
     */
    public com.google.protobuf.ByteString getMethodNameBytes() {
      java.lang.Object ref = methodName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        methodName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];
    public static final int RPC_ERRNO_FIELD_NUMBER = 200;
    private com.sm.common.xaio.proto.RpcData.RpcErrno rpcErrno_;

    /**
     * <code>optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];</code>
     */
    public boolean hasRpcErrno() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    /**
     * <code>optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];</code>
     */
    public com.sm.common.xaio.proto.RpcData.RpcErrno getRpcErrno() {
      return rpcErrno_;
    }

    // optional string user_error_msg = 210;
    public static final int USER_ERROR_MSG_FIELD_NUMBER = 210;
    private java.lang.Object userErrorMsg_;

    /**
     * <code>optional string user_error_msg = 210;</code>
     */
    public boolean hasUserErrorMsg() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }

    /**
     * <code>optional string user_error_msg = 210;</code>
     */
    public java.lang.String getUserErrorMsg() {
      java.lang.Object ref = userErrorMsg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userErrorMsg_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string user_error_msg = 210;</code>
     */
    public com.google.protobuf.ByteString getUserErrorMsgBytes() {
      java.lang.Object ref = userErrorMsg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        userErrorMsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 cancelled_reqid = 300;
    public static final int CANCELLED_REQID_FIELD_NUMBER = 300;
    private int cancelledReqid_;

    /**
     * <code>optional int32 cancelled_reqid = 300;</code>
     *
     * <pre>
     * 格外的控制选项, 用于取消请求
     * </pre>
     */
    public boolean hasCancelledReqid() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }

    /**
     * <code>optional int32 cancelled_reqid = 300;</code>
     *
     * <pre>
     * 格外的控制选项, 用于取消请求
     * </pre>
     */
    public int getCancelledReqid() {
      return cancelledReqid_;
    }

    // optional int32 compress = 400;
    public static final int COMPRESS_FIELD_NUMBER = 400;
    private int compress_;

    /**
     * <code>optional int32 compress = 400;</code>
     *
     * <pre>
     * 压缩方式
     * </pre>
     */
    public boolean hasCompress() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }

    /**
     * <code>optional int32 compress = 400;</code>
     *
     * <pre>
     * 压缩方式
     * </pre>
     */
    public int getCompress() {
      return compress_;
    }

    // optional bytes body = 500;
    public static final int BODY_FIELD_NUMBER = 500;
    private com.google.protobuf.ByteString body_;

    /**
     * <code>optional bytes body = 500;</code>
     */
    public boolean hasBody() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }

    /**
     * <code>optional bytes body = 500;</code>
     */
    public com.google.protobuf.ByteString getBody() {
      return body_;
    }

    private void initFields() {
      type_ = 0;
      requestid_ = 0;
      serviceName_ = "";
      methodName_ = "";
      rpcErrno_ = com.sm.common.xaio.proto.RpcData.RpcErrno.kSuccess;
      userErrorMsg_ = "";
      cancelledReqid_ = 0;
      compress_ = 0;
      body_ = com.google.protobuf.ByteString.EMPTY;
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1)
        return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(10, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(50, requestid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(100, getServiceNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(110, getMethodNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(200, rpcErrno_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(210, getUserErrorMsgBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(300, cancelledReqid_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(400, compress_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(500, body_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1)
        return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(10, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(50, requestid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(100, getServiceNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(110, getMethodNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(200, rpcErrno_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(210, getUserErrorMsgBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(300, cancelledReqid_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(400, compress_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(500, body_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sm.common.xaio.proto.RpcData.RpcProto parseFrom(com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.sm.common.xaio.proto.RpcData.RpcProto parseFrom(com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.sm.common.xaio.proto.RpcData.RpcProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.sm.common.xaio.proto.RpcData.RpcProto parseFrom(byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.sm.common.xaio.proto.RpcData.RpcProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.sm.common.xaio.proto.RpcData.RpcProto parseFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.sm.common.xaio.proto.RpcData.RpcProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.sm.common.xaio.proto.RpcData.RpcProto parseDelimitedFrom(java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.sm.common.xaio.proto.RpcData.RpcProto parseFrom(com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.sm.common.xaio.proto.RpcData.RpcProto parseFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(com.sm.common.xaio.proto.RpcData.RpcProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code rpc_client.RpcProto}
     */
    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder>
        implements com.sm.common.xaio.proto.RpcData.RpcProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.sm.common.xaio.proto.RpcData.internal_static_rpc_client_RpcProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.sm.common.xaio.proto.RpcData.internal_static_rpc_client_RpcProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(com.sm.common.xaio.proto.RpcData.RpcProto.class,
                com.sm.common.xaio.proto.RpcData.RpcProto.Builder.class);
      }

      // Construct using com.sm.common.xaio.proto.RpcData.RpcProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        requestid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        serviceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        methodName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        rpcErrno_ = com.sm.common.xaio.proto.RpcData.RpcErrno.kSuccess;
        bitField0_ = (bitField0_ & ~0x00000010);
        userErrorMsg_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        cancelledReqid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        compress_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        body_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.sm.common.xaio.proto.RpcData.internal_static_rpc_client_RpcProto_descriptor;
      }

      public com.sm.common.xaio.proto.RpcData.RpcProto getDefaultInstanceForType() {
        return com.sm.common.xaio.proto.RpcData.RpcProto.getDefaultInstance();
      }

      public com.sm.common.xaio.proto.RpcData.RpcProto build() {
        com.sm.common.xaio.proto.RpcData.RpcProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sm.common.xaio.proto.RpcData.RpcProto buildPartial() {
        com.sm.common.xaio.proto.RpcData.RpcProto result = new com.sm.common.xaio.proto.RpcData.RpcProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.requestid_ = requestid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serviceName_ = serviceName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.methodName_ = methodName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rpcErrno_ = rpcErrno_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.userErrorMsg_ = userErrorMsg_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.cancelledReqid_ = cancelledReqid_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.compress_ = compress_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.body_ = body_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sm.common.xaio.proto.RpcData.RpcProto) {
          return mergeFrom((com.sm.common.xaio.proto.RpcData.RpcProto) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sm.common.xaio.proto.RpcData.RpcProto other) {
        if (other == com.sm.common.xaio.proto.RpcData.RpcProto.getDefaultInstance())
          return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasRequestid()) {
          setRequestid(other.getRequestid());
        }
        if (other.hasServiceName()) {
          bitField0_ |= 0x00000004;
          serviceName_ = other.serviceName_;
          onChanged();
        }
        if (other.hasMethodName()) {
          bitField0_ |= 0x00000008;
          methodName_ = other.methodName_;
          onChanged();
        }
        if (other.hasRpcErrno()) {
          setRpcErrno(other.getRpcErrno());
        }
        if (other.hasUserErrorMsg()) {
          bitField0_ |= 0x00000020;
          userErrorMsg_ = other.userErrorMsg_;
          onChanged();
        }
        if (other.hasCancelledReqid()) {
          setCancelledReqid(other.getCancelledReqid());
        }
        if (other.hasCompress()) {
          setCompress(other.getCompress());
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        com.sm.common.xaio.proto.RpcData.RpcProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sm.common.xaio.proto.RpcData.RpcProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      // required int32 type = 10;
      private int type_;

      /**
       * <code>required int32 type = 10;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>required int32 type = 10;</code>
       */
      public int getType() {
        return type_;
      }

      /**
       * <code>required int32 type = 10;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>required int32 type = 10;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 requestid = 50;
      private int requestid_;

      /**
       * <code>optional int32 requestid = 50;</code>
       *
       * <pre>
       * 再一次请求时， 服务器会为每一个客户端指定一个唯一的 ID
       * 用于标识客户端，第一次请求时，客户端需要将 client_id 设置为 -1
       * </pre>
       */
      public boolean hasRequestid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      /**
       * <code>optional int32 requestid = 50;</code>
       *
       * <pre>
       * 再一次请求时， 服务器会为每一个客户端指定一个唯一的 ID
       * 用于标识客户端，第一次请求时，客户端需要将 client_id 设置为 -1
       * </pre>
       */
      public int getRequestid() {
        return requestid_;
      }

      /**
       * <code>optional int32 requestid = 50;</code>
       *
       * <pre>
       * 再一次请求时， 服务器会为每一个客户端指定一个唯一的 ID
       * 用于标识客户端，第一次请求时，客户端需要将 client_id 设置为 -1
       * </pre>
       */
      public Builder setRequestid(int value) {
        bitField0_ |= 0x00000002;
        requestid_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional int32 requestid = 50;</code>
       *
       * <pre>
       * 再一次请求时， 服务器会为每一个客户端指定一个唯一的 ID
       * 用于标识客户端，第一次请求时，客户端需要将 client_id 设置为 -1
       * </pre>
       */
      public Builder clearRequestid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        requestid_ = 0;
        onChanged();
        return this;
      }

      // optional string service_name = 100;
      private java.lang.Object serviceName_ = "";

      /**
       * <code>optional string service_name = 100;</code>
       */
      public boolean hasServiceName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      /**
       * <code>optional string service_name = 100;</code>
       */
      public java.lang.String getServiceName() {
        java.lang.Object ref = serviceName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          serviceName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string service_name = 100;</code>
       */
      public com.google.protobuf.ByteString getServiceNameBytes() {
        java.lang.Object ref = serviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          serviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string service_name = 100;</code>
       */
      public Builder setServiceName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        serviceName_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string service_name = 100;</code>
       */
      public Builder clearServiceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serviceName_ = getDefaultInstance().getServiceName();
        onChanged();
        return this;
      }

      /**
       * <code>optional string service_name = 100;</code>
       */
      public Builder setServiceNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        serviceName_ = value;
        onChanged();
        return this;
      }

      // optional string method_name = 110;
      private java.lang.Object methodName_ = "";

      /**
       * <code>optional string method_name = 110;</code>
       */
      public boolean hasMethodName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      /**
       * <code>optional string method_name = 110;</code>
       */
      public java.lang.String getMethodName() {
        java.lang.Object ref = methodName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          methodName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string method_name = 110;</code>
       */
      public com.google.protobuf.ByteString getMethodNameBytes() {
        java.lang.Object ref = methodName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          methodName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string method_name = 110;</code>
       */
      public Builder setMethodName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        methodName_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string method_name = 110;</code>
       */
      public Builder clearMethodName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        methodName_ = getDefaultInstance().getMethodName();
        onChanged();
        return this;
      }

      /**
       * <code>optional string method_name = 110;</code>
       */
      public Builder setMethodNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        methodName_ = value;
        onChanged();
        return this;
      }

      // optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];
      private com.sm.common.xaio.proto.RpcData.RpcErrno rpcErrno_ = com.sm.common.xaio.proto.RpcData.RpcErrno.kSuccess;

      /**
       * <code>optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];</code>
       */
      public boolean hasRpcErrno() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      /**
       * <code>optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];</code>
       */
      public com.sm.common.xaio.proto.RpcData.RpcErrno getRpcErrno() {
        return rpcErrno_;
      }

      /**
       * <code>optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];</code>
       */
      public Builder setRpcErrno(com.sm.common.xaio.proto.RpcData.RpcErrno value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        rpcErrno_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional .rpc_client.RpcErrno rpc_errno = 200 [default = kSuccess];</code>
       */
      public Builder clearRpcErrno() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rpcErrno_ = com.sm.common.xaio.proto.RpcData.RpcErrno.kSuccess;
        onChanged();
        return this;
      }

      // optional string user_error_msg = 210;
      private java.lang.Object userErrorMsg_ = "";

      /**
       * <code>optional string user_error_msg = 210;</code>
       */
      public boolean hasUserErrorMsg() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }

      /**
       * <code>optional string user_error_msg = 210;</code>
       */
      public java.lang.String getUserErrorMsg() {
        java.lang.Object ref = userErrorMsg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          userErrorMsg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string user_error_msg = 210;</code>
       */
      public com.google.protobuf.ByteString getUserErrorMsgBytes() {
        java.lang.Object ref = userErrorMsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          userErrorMsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string user_error_msg = 210;</code>
       */
      public Builder setUserErrorMsg(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        userErrorMsg_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string user_error_msg = 210;</code>
       */
      public Builder clearUserErrorMsg() {
        bitField0_ = (bitField0_ & ~0x00000020);
        userErrorMsg_ = getDefaultInstance().getUserErrorMsg();
        onChanged();
        return this;
      }

      /**
       * <code>optional string user_error_msg = 210;</code>
       */
      public Builder setUserErrorMsgBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        userErrorMsg_ = value;
        onChanged();
        return this;
      }

      // optional int32 cancelled_reqid = 300;
      private int cancelledReqid_;

      /**
       * <code>optional int32 cancelled_reqid = 300;</code>
       *
       * <pre>
       * 格外的控制选项, 用于取消请求
       * </pre>
       */
      public boolean hasCancelledReqid() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }

      /**
       * <code>optional int32 cancelled_reqid = 300;</code>
       *
       * <pre>
       * 格外的控制选项, 用于取消请求
       * </pre>
       */
      public int getCancelledReqid() {
        return cancelledReqid_;
      }

      /**
       * <code>optional int32 cancelled_reqid = 300;</code>
       *
       * <pre>
       * 格外的控制选项, 用于取消请求
       * </pre>
       */
      public Builder setCancelledReqid(int value) {
        bitField0_ |= 0x00000040;
        cancelledReqid_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional int32 cancelled_reqid = 300;</code>
       *
       * <pre>
       * 格外的控制选项, 用于取消请求
       * </pre>
       */
      public Builder clearCancelledReqid() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cancelledReqid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 compress = 400;
      private int compress_;

      /**
       * <code>optional int32 compress = 400;</code>
       *
       * <pre>
       * 压缩方式
       * </pre>
       */
      public boolean hasCompress() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }

      /**
       * <code>optional int32 compress = 400;</code>
       *
       * <pre>
       * 压缩方式
       * </pre>
       */
      public int getCompress() {
        return compress_;
      }

      /**
       * <code>optional int32 compress = 400;</code>
       *
       * <pre>
       * 压缩方式
       * </pre>
       */
      public Builder setCompress(int value) {
        bitField0_ |= 0x00000080;
        compress_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional int32 compress = 400;</code>
       *
       * <pre>
       * 压缩方式
       * </pre>
       */
      public Builder clearCompress() {
        bitField0_ = (bitField0_ & ~0x00000080);
        compress_ = 0;
        onChanged();
        return this;
      }

      // optional bytes body = 500;
      private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;

      /**
       * <code>optional bytes body = 500;</code>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }

      /**
       * <code>optional bytes body = 500;</code>
       */
      public com.google.protobuf.ByteString getBody() {
        return body_;
      }

      /**
       * <code>optional bytes body = 500;</code>
       */
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        body_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional bytes body = 500;</code>
       */
      public Builder clearBody() {
        bitField0_ = (bitField0_ & ~0x00000100);
        body_ = getDefaultInstance().getBody();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:rpc_client.RpcProto)
    }

    static {
      defaultInstance = new RpcProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:rpc_client.RpcProto)
  }

  private static com.google.protobuf.Descriptors.Descriptor internal_static_rpc_client_RpcProto_descriptor;
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_rpc_client_RpcProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
  static {
    java.lang.String[] descriptorData = {
        "\n\"com/sm/common/xaio/proto/Rpc.proto\022\nrp"
            + "c_client\"\337\001\n\010RpcProto\022\014\n\004type\030\n \002(\005\022\021\n\tr"
            + "equestid\0302 \001(\005\022\024\n\014service_name\030d \001(\t\022\023\n\013"
            + "method_name\030n \001(\t\0222\n\trpc_errno\030\310\001 \001(\0162\024."
            + "rpc_client.RpcErrno:\010kSuccess\022\027\n\016user_er"
            + "ror_msg\030\322\001 \001(\t\022\030\n\017cancelled_reqid\030\254\002 \001(\005"
            + "\022\021\n\010compress\030\220\003 \001(\005\022\r\n\004body\030\364\003 \001(\014*\354\003\n\010R"
            + "pcErrno\022\014\n\010kSuccess\020\000\022\007\n\003kOk\020\000\022\031\n\023kServi"
            + "ceErrorStatus\020\241\215\006\022\022\n\014kServiceBuzy\020\264\215\006\022\023\n"
            + "\rkNoAuthorized\020\276\215\006\022\027\n\021kAuthorizedFailed\020",
        "\310\215\006\022\023\n\rkInvalidIdent\020\322\215\006\022\032\n\024kInvalidProt"
            + "oPackage\020\323\215\006\022\034\n\026kInvalidRequestPackage\020\324"
            + "\215\006\022\031\n\023kMethodNotImplement\020\325\215\006\022\024\n\016kNoSuch"
            + "Service\020\334\215\006\022\023\n\rkNoSuchMethod\020\346\215\006\022\020\n\nkCan"
            + "celled\020\204\216\006\022\027\n\021kCancellingFailed\020\211\216\006\022\024\n\016k"
            + "InternalError\020\364\224\006\022\030\n\022kClientErrorStatus\020"
            + "\301\232\014\022\013\n\005kIdle\020\312\232\014\022\023\n\rkChannelError\020\336\232\014\022\032\n"
            + "\024kRequestHasCompleted\020\362\232\014\022\017\n\tkTimedout\020\220"
            + "\233\014\022\024\n\016kServerStopped\020\244\233\014\022\023\n\rkUnknownErro"
            + "r\020\341\247\022\032\002\020\001*o\n\010CommType\022\014\n\010kRequest\020\001\022\r\n\tk",
        "Response\020\010\022\020\n\014kControlType\020d\022\016\n\nkAuthori"
            + "ze\020x\022\023\n\016kCancelRequest\020\202\001\022\017\n\nkHeartBeat\020"
            + "\226\001B&\n\030com.sm.common.xaio.protoB\007RpcData\210" + "\001\001"};
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            internal_static_rpc_client_RpcProto_descriptor = getDescriptor().getMessageTypes().get(0);
            internal_static_rpc_client_RpcProto_fieldAccessorTable =
                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                    internal_static_rpc_client_RpcProto_descriptor,
                    new java.lang.String[] {"Type", "Requestid", "ServiceName", "MethodName", "RpcErrno",
                        "UserErrorMsg", "CancelledReqid", "Compress", "Body",});
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {}, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
